Here's the merged code with the additional dropdowns for the new columns:

```php
<?php
session_start();
require_once('dbconnect.php');
require_once('logging.php'); // Use require_once() instead of require()

// Function to display error message
function displayError($message) {
    echo '<div class="alert alert-danger">' . $message . '</div>';
}

// Fetch task statuses from the database
$query = "SELECT * FROM taskstatus";
$stmt = $conn->prepare($query);
$stmt->execute();
$result = $stmt->get_result();

// Store the statuses in an array
$taskStatuses = array();
while($row = $result->fetch_assoc()) {
    $taskStatuses[$row['status_id']] = $row['status_name'];
}

// Fetch JIRA types from the database
$query = "SELECT * FROM jira_type";
$stmt = $conn->prepare($query);
$stmt->execute();
$result = $stmt->get_result();

// Store the JIRA types in an array
$jiraTypes = array();
while($row = $result->fetch_assoc()) {
    $jiraTypes[$row['jira_type_id']] = $row['jira_types'];
}

// Fetch Sonar status types from the database
$query = "SELECT * FROM sonar_status";
$stmt = $conn->prepare($query);
$stmt->execute();
$result = $stmt->get_result();

// Store the Sonar status types in an array
$sonarStatuses = array();
while($row = $result->fetch_assoc()) {
    $sonarStatuses[$row['sonar_status_id']] = $row['sonar_status_type'];
}

// Fetch Contrast status types from the database
$query = "SELECT * FROM contrast_status";
$stmt = $conn->prepare($query);
$stmt->execute();
$result = $stmt->get_result();

// Store the Contrast status types in an array
$contrastStatuses = array();
while($row = $result->fetch_assoc()) {
    $contrastStatuses[$row['contrast_status_id']] = $row['contrast_status_type'];
}

// Fetch Depcheck status types from the database
$query = "SELECT * FROM depcheck_status";
$stmt = $conn->prepare($query);
$stmt->execute();
$result = $stmt->get_result();

// Store the Depcheck status types in an array
$depcheckStatuses = array();
while($row = $result->fetch_assoc()) {
    $depcheckStatuses[$row['depcheck_status_id']] = $row['depcheck_status_type'];
}

// Fetch Manual Secure Code Review types from the database
$query = "SELECT * FROM manual_securecodereview_status";
$stmt = $conn->prepare($query);
$stmt->execute();
$result = $stmt->get_result();

// Store the Manual Secure Code Review types in an array
$manualSecureCodeReviewTypes = array();
while($row = $result->fetch_assoc()) {
    $manualSecureCodeReviewTypes[$row['manual_securecodereview_id']] = $row['manual_securecodereview_type'];
}

// Fetch Manual Secure Testing types from the database
$query = "SELECT * FROM manual_securetesting_status";
$stmt = $conn->prepare($query);
$stmt->execute();
$result = $stmt->get_result();

// Store the Manual Secure Testing types in an array
$manualSecureTestingTypes = array();
while($row = $result->fetch_assoc()) {
    $manualSecureTestingTypes[$row['manual_securetesting_id']] = $row['manual_securetesting_type'];
}

// Check if columns already exist in the report table
$checkColumnsQuery = "SELECT * FROM information_schema.columns WHERE table_name = 'report' AND 
(column_name = 'created_at' OR column_name = 'username' OR column_name = 'jira_type_id' OR 
column_name = 'sonar_status_id' OR column_name = 'contrast_status_id' OR column_name = 'depcheck_status_id' OR 
column_name = 'manual_securecodereview_id' OR column_name = 'manual_securetesting_id')";
$stmt = $conn->prepare($checkColumnsQuery);
$stmt->execute();
$result = $stmt->get_result();

// If columns don't exist, add them
if($result->num_rows === 0) {
    // SQL to alter schema and add timestamp, username, and other columns
    $alterSchemaQuery = "ALTER TABLE report
        ADD COLUMN created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        ADD COLUMN username VARCHAR(255),
        ADD COLUMN jira_type_id INT,
        ADD COLUMN sonar_status_id INT,
        ADD COLUMN contrast_status_id INT,
        ADD COLUMN depcheck_status_id INT,
        ADD COLUMN manual_securecodereview_id INT,
        ADD COLUMN manual_securetesting_id INT";
    $conn->query($alterSchemaQuery); // Execute ALTER statement
}

// Delete report if delete button is clicked and confirmed
if(isset($_GET['delete']) && isset($_GET['report_id'])) {
    $report_id = $_GET['report_id'];
    // Check if confirmation is received
    if(isset($_GET['confirm'])) {
        // If confirmed, proceed with deletion
        $query = "DELETE FROM report WHERE report_id=?";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("i", $report_id); // "i" indicates integer type for the report_id

        if($stmt->execute()) {
            // Report deleted successfully
            echo '<div class="alert alert-success">Report deleted successfully!</div>';
            // Redirect back to the current assignment_id in URL
            if(isset($_SESSION['assignment_id'])) {
                header("Location: {$_SERVER['PHP_SELF']}?assignment_id={$_SESSION['assignment_id']}");
                exit();
            }
        } else {
            // Error in deleting report
            displayError('Error: Unable to delete report. ' . $stmt->error);
        }
    } else {
        // If not confirmed, redirect back to the page without deletion
        header("Location: {$_SERVER['PHP_SELF']}?delete=true&report_id=$report_id&confirm=false");
        exit();
    }
}

// Fetch assignment_id from URL if available
if(isset($_GET['assignment_id'])) {
    $_SESSION['assignment_id'] = $_GET['assignment_id'];
}

// Handle report editing
if(isset($_POST['edit_report_id']) && isset($_POST['edit_title']) && isset($_POST['edit_comments']) && isset($_POST['edit_status'])) {
    $report_id = $_POST['edit_report_id'];
    $title = $_POST['edit_title'];
    $comments = $_POST['edit_comments'];
    $status_id = $_POST['edit_status'];

    // Update the report with the new values
    $query = "UPDATE report SET title=?, comments=?, status_id=? WHERE report_id=?";
    $stmt = $conn->prepare($query);
    $stmt->bind_param("ssii", $title, $comments, $status_id, $report_id);

    if($stmt->execute()) {
        // Report updated successfully
        echo '<div class="alert alert-success">Report updated successfully!</div>';
    } else {
        // Error in updating report
        displayError('Error: Unable to update report. ' . $stmt->error);
    }
}

// Handle report creation
if(isset($_POST['title']) && isset($_POST['comments']) && isset($_POST
+++(+((++++++++

['status']) && isset($_POST['jira_type']) && isset($_POST['sonar_status']) && isset($_POST['contrast_status']) && isset($_POST['depcheck_status']) && isset($_POST['manual_securecodereview']) && isset($_POST['manual_securetesting'])) {
    $title = $_POST['title'];
    $comments = $_POST['comments'];
    $status_id = $_POST['status'];
    $jira_type_id = $_POST['jira_type'];
    $sonar_status_id = $_POST['sonar_status'];
    $contrast_status_id = $_POST['contrast_status'];
    $depcheck_status_id = $_POST['depcheck_status'];
    $manual_securecodereview_id = $_POST['manual_securecodereview'];
    $manual_securetesting_id = $_POST['manual_securetesting'];
    $username = isset($_SESSION['username']) ? $_SESSION['username'] : 'Unknown'; // Get username from session, or default to 'Unknown'

    if(isset($_SESSION['assignment_id'])) {
        $assignment_id = $_SESSION['assignment_id'];

        // Insert data into the report table with assignment_id, status_id, and username
        $query = "INSERT INTO report (assignment_id, title, comments, status_id, jira_type_id, sonar_status_id, contrast_status_id, depcheck_status_id, manual_securecodereview_id, manual_securetesting_id, created_at, username) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?)";
        $stmt = $conn->prepare($query);
        $stmt->bind_param("isiiiiiiiss", $assignment_id, $title, $comments, $status_id, $jira_type_id, $sonar_status_id, $contrast_status_id, $depcheck_status_id, $manual_securecodereview_id, $manual_securetesting_id, $username);

        try {
            if($stmt->execute()) {
                // Data saved successfully
                echo '<div class="alert alert-success">Data saved successfully!</div>';
            } else {
                // Error in saving data
                displayError('Error: Unable to save data. ' . $stmt->error);
            }
        } catch (mysqli_sql_exception $e) {
            // Catch foreign key constraint error
            if (strpos($e->getMessage(), 'foreign key constraint fails') !== false) {
                displayError('Error: This assignment ID or status ID does not exist.');
            } else {
                displayError('Error: ' . $e->getMessage());
            }
        }
    } else {
        // No assignment_id set
        displayError('Error: No assignment ID set.');
    }
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Report</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script>
        function confirmDelete(report_id) {
            if(confirm("Are you sure you want to delete this report?")) {
                window.location.href = `?delete=true&report_id=${report_id}&confirm=true`;
            }
        }

        function editReport(report_id, title, comments, status_id) {
            document.getElementById('edit_report_id').value = report_id;
            document.getElementById('edit_title').value = title;
            document.getElementById('edit_comments').value = comments;
            document.getElementById('edit_status').value = status_id;
            $('#editModal').modal('show');
        }
    </script>
    <style>
        @media print {
            body * {
                visibility: hidden;
            }
            #jiralist, #jiralist * {
                visibility: visible;
            }
            #jiralist {
                position: absolute;
                left: 0;
                top: 0;
            }
            table {
                width: 100%;
                border-collapse: collapse;
            }
            th, td {
                border: 1px solid #ddd;
                padding: 8px;
                text-align: left;
            }
            img {
                width: 200px;
                height: 200px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Create Report</h2>
        <form method="POST" action="">
            <div class="form-group">
                <label for="title">Title:</label>
                <input type="text" class="form-control" id="title" name="title" required>
            </div>
            <div class="form-group">
                <label for="comments">Comments:</label>
                <textarea class="form-control" id="comments" name="comments" rows="5" required></textarea>
            </div>
            <div class="form-group">
                <label for="status">Status:</label>
                <select class="form-control" id="status" name="status" required>
                    <option value="">Select Status</option>
                    <?php
                    // Populate dropdown options with task statuses
                    foreach($taskStatuses as $status_id => $status_name) {
                        echo '<option value="' . $status_id . '">' . $status_name . '</option>';
                    }
                    ?>
                </select>
            </div>
            <div class="form-group">
                <label for="jira_type">JIRA Type:</label>
                <select class="form-control" id="jira_type" name="jira_type" required>
                    <option value="">Select JIRA Type</option>
                    <?php
                    // Populate dropdown options with JIRA types
                    foreach($jiraTypes as $jira_type_id => $jira_type) {
                        echo '<option value="' . $jira_type_id . '">' . $jira_type . '</option>';
                    }
                    ?>
                </select>
            </div>
            <div class="form-group">
                <label for="sonar_status">Sonar Status:</label>
                <select class="form-control" id="sonar_status" name="sonar_status" required>
                    <option value="">Select Sonar Status</option>
                    <?php
                    // Populate dropdown options with Sonar status types
                    foreach($sonarStatuses as $sonar_status_id => $sonar_status) {
                       ++++++++++++++((++++(

echo '<option value="' . $sonar_status_id . '">' . $sonar_status . '</option>';
                    }
                    ?>
                </select>
            </div>
            <div class="form-group">
                <label for="contrast_status">Contrast Status:</label>
                <select class="form-control" id="contrast_status" name="contrast_status" required>
                    <option value="">Select Contrast Status</option>
                    <?php
                    // Populate dropdown options with Contrast status types
                    foreach($contrastStatuses as $contrast_status_id => $contrast_status) {
                        echo '<option value="' . $contrast_status_id . '">' . $contrast_status . '</option>';
                    }
                    ?>
                </select>
            </div>
            <div class="form-group">
                <label for="depcheck_status">Depcheck Status:</label>
                <select class="form-control" id="depcheck_status" name="depcheck_status" required>
                    <option value="">Select Depcheck Status</option>
                    <?php
                    // Populate dropdown options with Depcheck status types
                    foreach($depcheckStatuses as $depcheck_status_id => $depcheck_status) {
                        echo '<option value="' . $depcheck_status_id . '">' . $depcheck_status . '</option>';
                    }
                    ?>
                </select>
            </div>
            <div class="form-group">
                <label for="manual_securecodereview">Manual Secure Code Review:</label>
                <select class="form-control" id="manual_securecodereview" name="manual_securecodereview" required>
                    <option value="">Select Manual Secure Code Review</option>
                    <?php
                    // Populate dropdown options with Manual Secure Code Review types
                    foreach($manualSecureCodeReviewTypes as $manual_securecodereview_id => $manual_securecodereview) {
                        echo '<option value="' . $manual_securecodereview_id . '">' . $manual_securecodereview . '</option>';
                    }
                    ?>
                </select>
            </div>
            <div class="form-group">
                <label for="manual_securetesting">Manual Secure Testing:</label>
                <select class="form-control" id="manual_securetesting" name="manual_securetesting" required>
                    <option value="">Select Manual Secure Testing</option>
                    <?php
                    // Populate dropdown options with Manual Secure Testing types
                    foreach($manualSecureTestingTypes as $manual_securetesting_id => $manual_securetesting) {
                        echo '<option value="' . $manual_securetesting_id . '">' . $manual_securetesting . '</option>';
                    }
                    ?>
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Save</button>
        </form>

        <hr>
        <div class="container mt-3" id="jiralist">
            <h3>Reports</h3>
            <table id="patch" class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Comments</th>
                        <th>Status</th>
                        <th>Created At</th>
                        <th>Username</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <?php
                    // Fetch reports for the current assignment_id
                    if(isset($_SESSION['assignment_id'])) {
                        $assignment_id = $_SESSION['assignment_id'];
                        $query = "SELECT * FROM report WHERE assignment_id=?";
                        $stmt = $conn->prepare($query);
                        $stmt->bind_param("i", $assignment_id);
                        $stmt->execute();
                        $result = $stmt->get_result();

                        if($result->num_rows > 0) {
                            while($row = $result->fetch_assoc()) {
                                echo '<tr>';
                                echo '<td>' . $row['title'] . '</td>';
                                echo '<td>' . $row['comments'] . '</td>';
                                // Check if status_id exists in the $taskStatuses array before accessing its name
                                $status_name = isset($taskStatuses[$row['status_id']]) ? $taskStatuses[$row['status_id']] : 'Unknown';
                                echo '<td>' . $status_name . '</td>';
                                echo '<td>' . $row['created_at'] . '</td>';
                                echo '<td>' . $row['username'] . '</td>';
                                echo '<td>';
                                echo '<button class="btn btn-primary" onclick="editReport(' . $row['report_id'] . ', \'' . $row['title'] . '\', \'' . $row['comments'] . '\', ' . $row['status_id'] . ')">Edit</button>';
                                echo ' <button class="btn btn-danger" onclick="confirmDelete(' . $row['report_id'] . ')">Delete</button>';
                                echo '</td>';
                                echo '</tr>';
                            }
                        } else {
                            echo '<tr><td colspan="6">No reports found.</td></tr>';
                        }
                    } else {
                        echo '<tr><td colspan="6">No assignment ID set.</td></tr>';
                    }
                    ?>
                </tbody>
            </table>
            <button onclick="window.print()" class="btn btn-secondary">Print Preview</button>
        </div>
    </div>

    <!-- Edit Report Modal -->
    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Report</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
+++++++++++(((((((++++++

```html
                    <form method="POST" action="">
                        <input type="hidden" id="edit_report_id" name="edit_report_id">
                        <div class="form-group">
                            <label for="edit_title">Title:</label>
                            <input type="text" class="form-control" id="edit_title" name="edit_title" required>
                        </div>
                        <div class="form-group">
                            <label for="edit_comments">Comments:</label>
                            <textarea class="form-control" id="edit_comments" name="edit_comments" rows="5" required></textarea>
                        </div>
                        <div class="form-group">
                            <label for="edit_status">Status:</label>
                            <select class="form-control" id="edit_status" name="edit_status" required>
                                <option value="">Select Status</option>
                                <?php
                                // Populate dropdown options with task statuses
                                foreach($taskStatuses as $status_id => $status_name) {
                                    echo '<option value="' . $status_id . '">' . $status_name . '</option>';
                                }
                                ?>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- End Edit Report Modal -->

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
```

This code includes the additional dropdowns for JIRA type, Sonar status, Contrast status, Depcheck status, Manual Secure Code Review, and Manual Secure Testing in the UI. It also features an edit action that opens data in a modal for updating.